     1                                  ;数据串传送 原始位置是DS:SI 目标位置是ES:DI
     2                                  ;传送方向：
     3                                      ;正向传送：原始地址和目标地址都是从低地址到高地址推进
     4                                      ;反向传送：原始地址和目标地址都是从高地址到低地址推送
     5                                  ;在bochs虚拟机中查看标志寄存器信息: info eflags\rflags\flags
     6                                      ;显示的是各个标志寄存器的名字,大写表示值为1,小写表示值为0
     7 00000000 EB10                        jmp start
     8                                  
     9 00000002 790775076E076E0769-     text db 'y',0x07, 'u',0x07, 'n',0x07, 'n',0x07, 'i',0x07
     9 0000000B 07                 
    10 0000000C 620762076407                db 'b',0x07, 'b',0x07, 'd',0x07
    11                                  
    12                                  start:
    13 00000012 B8C007                      mov ax,0x7c0 ;设置数据段基地址
    14                                                  ;为什么是7c0不是7c00,因为这里是设置的段,具体地址是段*e+偏移地址
    15 00000015 8ED8                        mov ds,ax
    16                                  
    17 00000017 B800B8                      mov ax,0xb800 ;设置附加段基地址
    18 0000001A 8EC0                        mov es,ax
    19                                  
    20 0000001C FC                          cld ;清0方向位,表示为正向传送
    21                                          ;std为置1方向位,表示为反向传送
    22 0000001D BE[0200]                    mov si,text
    23 00000020 BF0000                      mov di,0
    24                                  
    25 00000023 B90800                      mov cx,(start-text)/2 ;数据的长度的一半(一半数据，一半数据格式)
    26 00000026 F3A5                        rep movsw ;字传送指令 req代表重复执行,重复的次数由cx内的值来决定
    27                                      
    28 00000028 EBFE                        jmp $ ;表示重复跳转到自身
    29                                  
    30 0000002A 00<rep 1D4h>                times 510-($-$$) db 0 ;$表示这一行的汇编地址 $$表示当前程序段的地址,这里是jmp第一行的开头的汇编地址
    31                                  
    32 000001FE 55AA                        db 0x55,0xaa
